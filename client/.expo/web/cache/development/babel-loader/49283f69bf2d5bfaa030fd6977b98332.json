{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { React, useState, useRef, useEffect } from 'react';\nimport Questions from \"./components/Questions\";\nimport Results from \"./components/Results\";\nimport questionsList from \"./assets/questions.json\";\nimport Login from \"./components/Login\";\nimport Feedback from \"./components/Feedback\";\nimport Storage from \"./modules/Storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  title: {\n    marginTop: 100,\n    alignItems: 'center'\n  },\n  blueRectangle: {\n    backgroundColor: 'rgb(0,174,255)',\n    padding: 10,\n    marginBottom: 20,\n    borderRadius: 20,\n    height: 120,\n    width: 350,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  titleText: {\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  loginBox: {\n    marginTop: 40,\n    alignItems: 'center'\n  },\n  cyanRectangle: {\n    backgroundColor: 'cyan',\n    borderRadius: 20,\n    width: 300,\n    height: 300,\n    marginBottom: 30,\n    marginTop: 80,\n    alignItems: 'center'\n  },\n  whiteRectangle: {\n    position: 'relative',\n    top: 40,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    width: 220,\n    height: 220,\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  boldInfo: {\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  info: {\n    fontWeight: 'normal'\n  },\n  infoContainer: {\n    marginTop: 40,\n    alignItems: 'center',\n    marginLeft: 10\n  },\n  deleteButtonContainer: {\n    width: 100\n  },\n  infoDeleteContainer: {\n    flexDirection: 'row',\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nfunction App() {\n  var name = useRef('');\n  var bestScore = useRef(0);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState('question'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nextPage = _useState4[0],\n      setNext = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      score = _useState6[0],\n      setScore = _useState6[1];\n\n  var bestUser = useRef('');\n  var bestOverall = useRef('');\n\n  function initializeBestUser() {\n    var startingBest, startingBestUser, startingBestScore;\n    return _regeneratorRuntime.async(function initializeBestUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Storage.getBestUser());\n\n          case 2:\n            startingBest = _context.sent;\n            startingBestUser = startingBest.user;\n            startingBestScore = startingBest.best;\n            bestUser.current = startingBestUser;\n            bestOverall.current = startingBestScore;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    initializeBestUser();\n  }, []);\n  var start = useRef(false);\n  var counter = useRef(0);\n  var topPlayers = useRef();\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      correct = _useState8[0],\n      setCorrect = _useState8[1];\n\n  function LoginUser(info) {\n    var RegEx;\n    return _regeneratorRuntime.async(function LoginUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            RegEx = /^[a-zA-Z0-9]+$/;\n\n            if (!RegEx.test(info.name)) {\n              _context2.next = 18;\n              break;\n            }\n\n            name.current = info.name;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(Storage.existingUser(name.current));\n\n          case 6:\n            if (!_context2.sent) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(Storage.getBestScore(name.current));\n\n          case 9:\n            bestScore.current = _context2.sent;\n            _context2.next = 14;\n            break;\n\n          case 12:\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(Storage.addUser(name.current, 0));\n\n          case 14:\n            start.current = true;\n            setScore(0);\n            _context2.next = 19;\n            break;\n\n          case 18:\n            setError('Use only letters and numbers');\n\n          case 19:\n            _context2.next = 24;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](0);\n            throw new Error('login error');\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 21]], Promise);\n  }\n\n  function RestartGame() {\n    return _regeneratorRuntime.async(function RestartGame$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            setScore();\n            setError('');\n            setNext('question');\n            name.current = '';\n            start.current = false;\n            bestScore.current = 0;\n            initializeBestUser();\n            counter.current = 0;\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            throw new Error('restart error');\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  }\n\n  function updateBestScore(currScore) {\n    return _regeneratorRuntime.async(function updateBestScore$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n\n            if (!(currScore > bestScore.current)) {\n              _context4.next = 5;\n              break;\n            }\n\n            bestScore.current = currScore;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(Storage.updateBest(name.current, currScore));\n\n          case 5:\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            throw new Error('update best score error');\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  function QuestionCounter() {\n    var best;\n    return _regeneratorRuntime.async(function QuestionCounter$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            counter.current += 1;\n\n            if (!(counter.current >= 10)) {\n              _context5.next = 15;\n              break;\n            }\n\n            updateBestScore(score);\n            _context5.next = 6;\n            return _regeneratorRuntime.awrap(Storage.getBestUser());\n\n          case 6:\n            best = _context5.sent;\n            bestUser.current = best.user;\n            bestOverall.current = best.best;\n            _context5.next = 11;\n            return _regeneratorRuntime.awrap(Storage.getTopUsers());\n\n          case 11:\n            topPlayers.current = _context5.sent;\n            setNext('results');\n            _context5.next = 16;\n            break;\n\n          case 15:\n            setNext('question');\n\n          case 16:\n            _context5.next = 21;\n            break;\n\n          case 18:\n            _context5.prev = 18;\n            _context5.t0 = _context5[\"catch\"](0);\n            throw new Error('count question error');\n\n          case 21:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  }\n\n  function handleDelete() {\n    return _regeneratorRuntime.async(function handleDelete$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            Storage.deleteUser(name.current);\n            RestartGame();\n            _context6.next = 8;\n            break;\n\n          case 5:\n            _context6.prev = 5;\n            _context6.t0 = _context6[\"catch\"](0);\n            throw new Error('delete error');\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  if (!start.current) {\n    return _jsxs(View, {\n      children: [_jsx(View, {\n        style: styles.title,\n        children: _jsx(View, {\n          style: styles.blueRectangle,\n          children: _jsx(Text, {\n            style: styles.titleText,\n            children: \"Guess the Celebrity\"\n          })\n        })\n      }), _jsx(View, {\n        style: styles.loginBox,\n        children: _jsx(View, {\n          style: styles.cyanRectangle,\n          children: _jsx(View, {\n            style: styles.whiteRectangle,\n            children: _jsx(Login, {\n              LoginUser: LoginUser,\n              error: error\n            })\n          })\n        })\n      })]\n    });\n  }\n\n  if (nextPage === 'question') {\n    return _jsxs(View, {\n      children: [_jsxs(View, {\n        style: styles.infoDeleteContainer,\n        children: [_jsx(View, {\n          style: styles.deleteButtonContainer,\n          children: _jsx(Button, {\n            title: \"Delete Account\",\n            onPress: handleDelete\n          })\n        }), _jsxs(View, {\n          style: styles.infoContainer,\n          children: [_jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"User:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [name.current, ' ', '\\n']\n            })]\n          }), _jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"Current Score:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [score, ' ', '\\n']\n            })]\n          }), _jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"Best Score:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [bestScore.current, ' ', '\\n']\n            })]\n          }), _jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"Game Leader:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [bestUser.current, \"(\", bestOverall.current, \")\", ' ', '\\n']\n            })]\n          })]\n        })]\n      }), _jsx(View, {\n        children: _jsx(Questions, {\n          questionslist: questionsList,\n          score: score,\n          setScore: setScore,\n          setCorrect: setCorrect,\n          setNext: setNext\n        })\n      })]\n    });\n  }\n\n  if (nextPage === 'feedback') {\n    return _jsxs(View, {\n      children: [_jsxs(View, {\n        style: styles.infoDeleteContainer,\n        children: [_jsx(View, {\n          style: styles.deleteButtonContainer,\n          children: _jsx(Button, {\n            title: \"Delete Account\",\n            onPress: handleDelete\n          })\n        }), _jsxs(View, {\n          style: styles.infoContainer,\n          children: [_jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"User:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [name.current, ' ', '\\n']\n            })]\n          }), _jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"Current Score:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [score, ' ', '\\n']\n            })]\n          }), _jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"Best Score:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [bestScore.current, ' ', '\\n']\n            })]\n          }), _jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"Game Leader:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [bestUser.current, \"(\", bestOverall.current, \")\", ' ', '\\n']\n            })]\n          })]\n        })]\n      }), _jsx(View, {\n        children: _jsx(Feedback, {\n          correct: correct,\n          Counter: QuestionCounter\n        })\n      })]\n    });\n  }\n\n  if (nextPage === 'results') {\n    return _jsxs(View, {\n      children: [_jsxs(View, {\n        style: styles.infoDeleteContainer,\n        children: [_jsx(View, {\n          style: styles.deleteButtonContainer,\n          children: _jsx(Button, {\n            title: \"Delete Account\",\n            onPress: handleDelete\n          })\n        }), _jsxs(View, {\n          style: styles.infoContainer,\n          children: [_jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"User:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [name.current, ' ', '\\n']\n            })]\n          }), _jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"Current Score:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [score, ' ', '\\n']\n            })]\n          }), _jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"Best Score:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [bestScore.current, ' ', '\\n']\n            })]\n          }), _jsxs(Text, {\n            style: styles.boldInfo,\n            children: [\"Game Leader:\\xA0\", _jsxs(Text, {\n              style: styles.info,\n              children: [bestUser.current, \"(\", bestOverall.current, \")\", ' ', '\\n']\n            })]\n          })]\n        })]\n      }), _jsx(View, {\n        children: _jsx(Results, {\n          Score: score,\n          HandleRestart: RestartGame,\n          TopPlayers: topPlayers.current\n        })\n      })]\n    });\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ethanseto/Desktop/CIS350/hw5/hw5-backend-jiwon-ethan-1/client/App.js"],"names":["React","useState","useRef","useEffect","Questions","Results","questionsList","Login","Feedback","Storage","styles","StyleSheet","create","title","marginTop","alignItems","blueRectangle","backgroundColor","padding","marginBottom","borderRadius","height","width","justifyContent","titleText","fontSize","fontWeight","loginBox","cyanRectangle","whiteRectangle","position","top","textAlign","boldInfo","info","infoContainer","marginLeft","deleteButtonContainer","infoDeleteContainer","flexDirection","App","name","bestScore","error","setError","nextPage","setNext","score","setScore","bestUser","bestOverall","initializeBestUser","getBestUser","startingBest","startingBestUser","user","startingBestScore","best","current","start","counter","topPlayers","correct","setCorrect","LoginUser","RegEx","test","existingUser","getBestScore","addUser","Error","RestartGame","updateBestScore","currScore","updateBest","QuestionCounter","getTopUsers","handleDelete","deleteUser"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-bind */\n/* eslint-disable react/jsx-filename-extension */\nimport {\n  StyleSheet, Text, View, Button,\n} from 'react-native';\n\nimport {\n  React, useState, useRef, useEffect,\n} from 'react';\nimport Questions from './components/Questions';\nimport Results from './components/Results';\nimport questionsList from './assets/questions.json';\nimport Login from './components/Login';\nimport Feedback from './components/Feedback';\nimport Storage from './modules/Storage';\n\nconst styles = StyleSheet.create({\n  title: {\n    marginTop: 100,\n    alignItems: 'center',\n  },\n  blueRectangle: {\n    backgroundColor: 'rgb(0,174,255)',\n    padding: 10,\n    marginBottom: 20,\n    borderRadius: 20,\n    height: 120,\n    width: 350,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  titleText: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  loginBox: {\n    marginTop: 40,\n    alignItems: 'center',\n  },\n  cyanRectangle: {\n    backgroundColor: 'cyan',\n    borderRadius: 20,\n    width: 300,\n    height: 300,\n    marginBottom: 30,\n    marginTop: 80,\n    alignItems: 'center',\n  },\n  whiteRectangle: {\n    position: 'relative',\n    top: 40,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    width: 220,\n    height: 220,\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n  boldInfo: {\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  info: {\n    fontWeight: 'normal',\n  },\n  infoContainer: {\n    marginTop: 40,\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  deleteButtonContainer: {\n    width: 100,\n  },\n  infoDeleteContainer: {\n    flexDirection: 'row',\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nfunction App() {\n  const name = useRef('');\n  const bestScore = useRef(0);\n  const [error, setError] = useState('');\n  const [nextPage, setNext] = useState('question');\n  const [score, setScore] = useState();\n  const bestUser = useRef('');\n  const bestOverall = useRef('');\n  // const [restart, setRestart] = useState(false);\n  async function initializeBestUser() {\n    const startingBest = await Storage.getBestUser();\n    const startingBestUser = startingBest.user;\n    const startingBestScore = startingBest.best;\n    bestUser.current = startingBestUser;\n    bestOverall.current = startingBestScore;\n  }\n  useEffect(() => {\n    // RestartGame();\n    initializeBestUser();\n  }, []);\n\n  const start = useRef(false);\n  const counter = useRef(0);\n\n  const topPlayers = useRef();\n\n  const [correct, setCorrect] = useState(false);\n\n  async function LoginUser(info) {\n    try {\n      const RegEx = /^[a-zA-Z0-9]+$/;\n      if (RegEx.test(info.name)) {\n        name.current = info.name;\n        if (await Storage.existingUser(name.current)) {\n          bestScore.current = await Storage.getBestScore(name.current);\n        } else {\n          await Storage.addUser(name.current, 0);\n        }\n        start.current = true;\n        setScore(0);\n      } else {\n        setError('Use only letters and numbers');\n      }\n    } catch (err) {\n      throw new Error('login error');\n    }\n  }\n\n  async function RestartGame() {\n    try {\n      setScore();\n      setError('');\n      setNext('question');\n      name.current = '';\n      start.current = false;\n      bestScore.current = 0;\n      initializeBestUser();\n      counter.current = 0;\n    } catch (err) {\n      throw new Error('restart error');\n    }\n  }\n\n  async function updateBestScore(currScore) {\n    try {\n      if (currScore > bestScore.current) {\n        bestScore.current = currScore;\n        await Storage.updateBest(name.current, currScore);\n      }\n    } catch (err) {\n      throw new Error('update best score error');\n    }\n  }\n\n  async function QuestionCounter() {\n    try {\n      counter.current += 1;\n      if (counter.current >= 10) {\n        updateBestScore(score);\n        const best = await Storage.getBestUser();\n        bestUser.current = best.user;\n        bestOverall.current = best.best;\n        topPlayers.current = await Storage.getTopUsers();\n        setNext('results');\n      } else {\n        setNext('question');\n      }\n    } catch (err) {\n      throw new Error('count question error');\n    }\n  }\n\n  async function handleDelete() {\n    try {\n      Storage.deleteUser(name.current);\n      // setRestart(true);\n      RestartGame();\n    } catch (err) {\n      throw new Error('delete error');\n    }\n  }\n\n  if (!start.current) {\n    return (\n      <View>\n        <View style={styles.title}>\n          <View style={styles.blueRectangle}>\n            <Text style={styles.titleText}>Guess the Celebrity</Text>\n          </View>\n        </View>\n        <View style={styles.loginBox}>\n          <View style={styles.cyanRectangle}>\n            <View style={styles.whiteRectangle}>\n              <Login LoginUser={LoginUser} error={error} />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  // haven't reached 10 questions yet\n  if (nextPage === 'question') {\n    return (\n      <View>\n        <View style={styles.infoDeleteContainer}>\n          <View style={styles.deleteButtonContainer}>\n            <Button title=\"Delete Account\" onPress={handleDelete} />\n          </View>\n          <View style={styles.infoContainer}>\n            <Text style={styles.boldInfo}>\n              User:&nbsp;\n              <Text style={styles.info}>\n                { name.current }\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n            <Text style={styles.boldInfo}>\n              Current Score:&nbsp;\n              <Text style={styles.info}>\n                { score}\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n            <Text style={styles.boldInfo}>\n              Best Score:&nbsp;\n              <Text style={styles.info}>\n                { bestScore.current }\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n            <Text style={styles.boldInfo}>\n              Game Leader:&nbsp;\n              <Text style={styles.info}>\n                { bestUser.current }\n                (\n                { bestOverall.current }\n                )\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n          </View>\n        </View>\n        <View>\n          <Questions\n            questionslist={questionsList}\n            score={score}\n            setScore={setScore}\n            setCorrect={setCorrect}\n            setNext={setNext}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  // feedack page\n  if (nextPage === 'feedback') {\n    return (\n      <View>\n        <View style={styles.infoDeleteContainer}>\n          <View style={styles.deleteButtonContainer}>\n            <Button title=\"Delete Account\" onPress={handleDelete} />\n          </View>\n          <View style={styles.infoContainer}>\n            <Text style={styles.boldInfo}>\n              User:&nbsp;\n              <Text style={styles.info}>\n                { name.current }\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n            <Text style={styles.boldInfo}>\n              Current Score:&nbsp;\n              <Text style={styles.info}>\n                { score}\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n            <Text style={styles.boldInfo}>\n              Best Score:&nbsp;\n              <Text style={styles.info}>\n                { bestScore.current }\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n            <Text style={styles.boldInfo}>\n              Game Leader:&nbsp;\n              <Text style={styles.info}>\n                { bestUser.current }\n                (\n                { bestOverall.current }\n                )\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n          </View>\n        </View>\n        <View>\n          <Feedback correct={correct} Counter={QuestionCounter} />\n        </View>\n      </View>\n    );\n  }\n\n  // finished 10 questions\n  if (nextPage === 'results') {\n    return (\n      <View>\n        <View style={styles.infoDeleteContainer}>\n          <View style={styles.deleteButtonContainer}>\n            <Button title=\"Delete Account\" onPress={handleDelete} />\n          </View>\n          <View style={styles.infoContainer}>\n            <Text style={styles.boldInfo}>\n              User:&nbsp;\n              <Text style={styles.info}>\n                { name.current }\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n            <Text style={styles.boldInfo}>\n              Current Score:&nbsp;\n              <Text style={styles.info}>\n                { score}\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n            <Text style={styles.boldInfo}>\n              Best Score:&nbsp;\n              <Text style={styles.info}>\n                { bestScore.current }\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n            <Text style={styles.boldInfo}>\n              Game Leader:&nbsp;\n              <Text style={styles.info}>\n                { bestUser.current }\n                (\n                { bestOverall.current }\n                )\n                {' '}\n                {'\\n'}\n              </Text>\n            </Text>\n          </View>\n        </View>\n        <View>\n          <Results Score={score} HandleRestart={RestartGame} TopPlayers={topPlayers.current} />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}